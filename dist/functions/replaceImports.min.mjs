import{strBeforeLast}from"../utilities/strBeforeLast";import{makeFilepath}from"../utilities/makeFilepath";import{fileExists}from"test-filesystem";import{makeCommon}from"../main";import{regexEscape}from"../utilities/regexEscape";import{makeRelativePath}from"../utilities/makeRelativePath";export const replaceImports=(e,t,s,i={})=>(s,r)=>{if(!r.file)return console.error("Unable to find module",e,r),s;let m=makeRelativePath(e,r.file),o=t;(o.endsWith(".js")||o.endsWith(".mjs"))&&(o=strBeforeLast(o,"/"));let a=makeFilepath(o,m);a.endsWith(".mjs")&&(a=strBeforeLast(a,".mjs")+".js"),fileExists(a)||((a.endsWith(".js")||a.endsWith(".mjs"))&&(a=strBeforeLast(a,"/")),makeCommon(r.file,a,i));const l=regexEscape(r.module),f=new RegExp(`(['"\`])${l}['"\`]`);if(r.module.includes("${")){const e=l.replace(/(\\\$\\{.+\\})+/g,".+"),t=new RegExp(`(.+/)(${e})(/.+)`,"g");m=m.replace(t,"$1"+r.module+"$3")}return m.endsWith(".mjs")&&(m=strBeforeLast(m,".mjs")+".js"),s.replace(f,`$1${m}$1`)};