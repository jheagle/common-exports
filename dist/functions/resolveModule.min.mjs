import{readdirSync}from"fs";import strAfterLast from"../utilities/strAfterLast";import makeFilepath from"./makeFilepath.mjs";import fileExists from"./fileExists.mjs";import regexEscape from"./regexEscape.mjs";import strBeforeLast from"../utilities/strBeforeLast";const modulesDirectory="node_modules";export const resolveModule=(e,t,s="")=>{e=makeFilepath(e),s||(s=e),t.startsWith("#")&&(t=t.slice(1),s=makeFilepath(s,"vendor")),t.startsWith("./")&&(t=t.slice(2)),t.startsWith("../")&&(t=t.slice(3));let r=makeFilepath(s,strBeforeLast(t,"/"));if(fileExists(r)){let e=t.includes("/")?strAfterLast(t,"/"):t;e=makeFilepath(e),e=regexEscape(e),e.includes("\\$\\{")&&(e=e.replace(/(\\\$\\{.+\\})+/g,".+"));const s=new RegExp(`^${e}$`),i=readdirSync(r).filter((e=>s.test(e)));if(i.length)return i.map((e=>makeFilepath(r,e))).filter(fileExists)}if("node_modules"===strAfterLast(s,"/")&&!(s=makeFilepath(s,"../../")))return[];const i=makeFilepath(s,"node_modules");return i!==e&&i?resolveModule(e,t,i):[]};export default resolveModule;