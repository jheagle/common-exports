import{readdirSync}from"fs";import strAfterLast from"../utilities/strAfterLast";import makeFilepath from"./makeFilepath.mjs";import fileExists from"./fileExists.mjs";import regexEscape from"./regexEscape.mjs";import strBeforeLast from"../utilities/strBeforeLast";const modulesDirectory="node_modules";export const resolveModule=(e,t,r="")=>{if(r===e)return null;e=makeFilepath(e),r||(r=e),t.startsWith("#")&&(t=t.slice(1),r=makeFilepath(r,"vendor")),t.startsWith("./")&&(t=t.slice(2)),t.startsWith("../")&&(t=t.slice(3));let s=makeFilepath(r,strBeforeLast(t,"/"));if(fileExists(s)){let e=t.includes("/")?strAfterLast(t,"/"):t;e=makeFilepath(e),e=regexEscape(e),e.includes("\\$\\{")&&(e=e.replace(/(\\\$\\{.+\\})+/g,".+"));const r=new RegExp(`^${e}$`),i=readdirSync(s).filter((e=>r.test(e)));if(i.length)return i.map((e=>makeFilepath(s,e))).filter(fileExists)}return"node_modules"!==strAfterLast(r,"/")||(r=makeFilepath(r,"../../"))!==e&&r?resolveModule(e,t,makeFilepath(r,"node_modules")):[]};export default resolveModule;